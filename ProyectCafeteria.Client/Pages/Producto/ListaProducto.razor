@page "/api/Productos"
@inject IHttpServicio http

<h3>Lista de Productos</h3>
<br />
<a class="btn btn-primary mb-3" href="/api/Productos/crear">Nuevo producto</a>
<br />

<!-- Tabla con estilos de Bootstrap -->
<table class="table table-bordered table-striped">
    <thead class="thead-dark">
        <tr>
            <th>Nombre</th>
            <th>Descripción</th>
            <th>Precio</th>
            <th>Stock</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @if (Mensaje == "")
        {
            @if (listaProductos == null)
            {
                <tr>
                    <td colspan="5" class="text-center">Buscando....</td>
                </tr>
            }
            else if (listaProductos.Count == 0)
            {
                <tr>
                    <td colspan="5" class="text-center">No existen los productos</td>
                </tr>
            }
            else
            {
                @foreach (var item in listaProductos)
                {
                    <tr>
                        <td>@item.Nombre</td>
                        <td>@item.Descripcion</td>
                        <td>@item.Precio</td>
                        <td>@item.Stock</td>
                        <td>
                            <!-- Botón de Editar -->
                            <a class="btn btn-primary btn-sm me-2"
                               href="api/Productos/editar/@item.Id">
                                Editar
                            </a>
                            <!-- Botón de Borrar -->
                            <button class="btn btn-danger btn-sm"
                               @onclick="() => Eliminar(item)">
                                Borrar
                            </button>
                        </td>
                    </tr>
                }
            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center text-danger">Error: @Mensaje</td>
            </tr>
        }
    </tbody>
</table>

<Confirmacion @ref="confirmacion"
              Titulo="CUIDADO"
              textCancelar="Salir"
              onCancel="Cancelar"
              onConfirm="Borrar">
              <h5>Está por borrar el producto</h5>
              <br />
              <p>Está seguro?</p>
</Confirmacion>

@code {
    Confirmacion  confirmacion;

    List<Producto> listaProductos;
    Producto Producto;
    string Mensaje = "";

    Producto? ProducBorrar = null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
    }

    private async Task Leer()
    {
        var resp = await http.Get<List<Producto>>("api/Productos");
        if (!resp.Error)
        {
            listaProductos = resp.Respuesta;
        }
        else
        {
            Mensaje = await resp.ObtenerError();
        }
    }

    private async Task Eliminar(Producto producto)
    {
        ProducBorrar = producto;
        confirmacion.Ver();
    }

    private void Cancelar()
    {
        confirmacion.Ocultar();
        ProducBorrar = null;
    }

    private async Task Borrar()
    {
        var respuesta = await http.Delete($"api/Productos/{ProducBorrar.Id}");
        if (respuesta.Error)
        {
            var body = "No se pudo borrar";
        }
        Cancelar();
        await Leer();
    }
}