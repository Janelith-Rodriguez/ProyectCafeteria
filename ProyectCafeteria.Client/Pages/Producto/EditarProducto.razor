@page "/api/Productos/editar"
@inject IHttpServicio http
@inject NavigationManager navigationManager

<h3>Editar Producto</h3>

<h1>@lia</h1>

<EditForm Model="Producto" OnValidSubmit="Grabar">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Nombre</label>
        <div>
            <InputText class="form-control" @bind-Value="@Producto.Nombre" />
            <ValidationMessage For="@(() => Producto.Nombre)" />
        </div>
    </div>
    <div class="form-group">
        <label>Descripcion</label>
        <div>
            <InputText class="form-control" @bind-Value="@Producto.Descripcion" />
            <ValidationMessage For="@(() => Producto.Descripcion)" />
        </div>
    </div>
    <div class="form-group">
        <label>Precio</label>
        <div>
            <InputNumber class="form-control" @bind-Value="@Producto.Precio" />
            <ValidationMessage For="@(() => Producto.Precio)" />
        </div>
    </div>
    <div class="form-group">
        <label>Stock</label>
        <div>
            <InputNumber class="form-control" @bind-Value="@Producto.Stock" />
            <ValidationMessage For="@(() => Producto.Stock)" />
        </div>
    </div>
    <br />
    <button class="btn btn-primary" type="submit">Aceptar</button>
    <button class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code {
    [Parameter] public int ProductoId { get; set; }
    private Producto Producto = new Producto();

    string lia = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Mostrar();
    }

    private async Task Mostrar()
    {
        var respuesta = await http.Get<Producto>($"api/Productos");

        if (!respuesta.Error)
        {
            Producto = respuesta.Respuesta;
        }
        else
        {
            navigationManager.NavigateTo("/api/Productos");
        }
    }



    private async Task Grabar()
    {
        //Producto.Orden = new List<Producto>();

        var httpRespuesta = await http.Put<Producto>($"api/Producto", Producto);
        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/api/Productos");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Productos");
    }
}
