@page "/api/Carritos"
@inject IHttpServicio http

<h3 class="mb-4 text-center">Lista de Carrito</h3>

<div class="d-flex justify-content-end mb-3">
    <a class="btn btn-success" href="/api/Carritos/crear">
        <i class="fas fa-plus"></i> Nuevo carrito
    </a>
</div>

<table class="table table-hover table-bordered">
    <thead class="bg-primary text-white text-center">
        <tr>
            <th>UsuarioId</th>
            <th>OrdenId</th>
            <th>Cantidad</th>
            <th style="width: 150px;">Acciones</th>
        </tr>
    </thead>
    <tbody>
        @if (Mensaje == "")
        {
            @if (listaCarritos == null)
            {
                <tr>
                    <td colspan="4" class="text-center text-secondary">
                        <i class="fas fa-spinner fa-spin"></i> Buscando...
                    </td>
                </tr>
            }
            else if (listaCarritos.Count == 0)
            {
                <tr>
                    <td colspan="4" class="text-center text-warning">
                        <i class="fas fa-exclamation-circle"></i> No existen productos en el carrito
                    </td>
                </tr>
            }
            else
            {
                @foreach (var item in listaCarritos)
                {
                    <tr>
                        <td>@item.UsuarioId</td>
                        <td>@item.OrdenId</td>
                        <td>@item.Cantidad</td>
                        <td class="text-center">
                            <a class="btn btn-outline-primary btn-sm me-1" href="api/Carritos/editar/@item.Id">
                                <i class="fas fa-edit"></i> Editar
                            </a>
                            <button class="btn btn-outline-danger btn-sm" @onclick="() => Eliminar(item)">
                                <i class="fas fa-trash-alt"></i> Borrar
                            </button>
                        </td>
                    </tr>
                }
            }
        }
        else
        {
            <tr>
                <td colspan="4" class="text-center text-danger">
                    <i class="fas fa-exclamation-triangle"></i> Error: @Mensaje
                </td>
            </tr>
        }
    </tbody>
</table>



<Confirmacion @ref="confirmacion"
              Titulo="CUIDADO"
              textCancelar="Salir"
              onCancel="Cancelar"
              onConfirm="Borrar">
              <h5>Está por borrar el carrito</h5>
              <br />
              <p>Está seguro?</p>
</Confirmacion>

@code {
    Confirmacion  confirmacion;

    List<Carrito> listaCarritos;
    Carrito producto1;
    string Mensaje = "";

    Carrito? CarBorrar = null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
    }

    private async Task Leer()
    {
        var resp = await http.Get<List<Carrito>>("api/Carritos");
        if (!resp.Error)
        {
            listaCarritos = resp.Respuesta;
        }
        else
        {
            Mensaje = await resp.ObtenerError();
        }
    }

    private async Task Eliminar(Carrito carrito)
    {
        CarBorrar = carrito;
        confirmacion.Ver();
    }

    private void Cancelar()
    {
        confirmacion.Ocultar();
        CarBorrar = null;
    }

    private async Task Borrar()
    {
        var respuesta = await http.Delete($"api/Carritos/{CarBorrar.Id}");
        if (respuesta.Error)
        {
            var body = "No se pudo borrar";
        }
        Cancelar();
        await Leer();
    }
}
