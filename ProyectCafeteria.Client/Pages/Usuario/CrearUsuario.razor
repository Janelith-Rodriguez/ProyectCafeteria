@page "/api/Usuarios/crear"
@inject IHttpServicio http
@inject NavigationManager navigationManager

<h3>Nuevo Usuario</h3>


<EditForm Model="Usuario" OnValidSubmit="Grabar">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Nombre</label>
        <div>
            <InputText class="form-control" @bind-Value="@Usuario.Nombre" />
            <ValidationMessage For="@(() => Usuario.Nombre)" />
        </div>
    </div>
    <div class="form-group">
        <label>Email</label>
        <div>
            <InputText class="form-control" @bind-Value="@Usuario.Email" />
            <ValidationMessage For="@(() => Usuario.Email)" />
        </div>
    </div>
    <div class="form-group">
        <label>Password</label>
        <div>
            <InputText class="form-control" @bind-Value="@Usuario.Password" />
            <ValidationMessage For="@(() => Usuario.Password)" />
        </div>
    </div>
    <br />
    <button class="btn btn-primary" type="submit">Aceptar</button>
    <button class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code {
    private Usuario Usuario = new Usuario();

    private async Task Grabar()
    {
        var httpRespuesta = await http.Post<Usuario>("api/Usuarios", Usuario);
        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/api/Usuarios");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Usuarios");
    }
}
